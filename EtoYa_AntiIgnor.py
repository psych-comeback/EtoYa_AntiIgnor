from telethon import TelegramClient, errors, types
from telethon.tl.functions.messages import SendReactionRequest
import asyncio

#—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
#–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ input –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ input –∏ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é
api_id = input("–í–≤–µ–¥–∏—Ç–µ api_id: ")
api_hash = input("–í–≤–µ–¥–∏—Ç–µ api_hash: ")

client = TelegramClient('session_name', api_id, api_hash)

async def send_messages(chat_id, message, interval):
    while True:
        try:
            await client.send_message(chat_id, message)
            #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}: {message}")
        except errors.RPCError as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await asyncio.sleep(interval)

async def send_multiple_messages(chat_id, message, count):
    for _ in range(count):
        try:
            await client.send_message(chat_id, message)
            #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}: {message}")
        except errors.RPCError as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    print("–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")

async def reply_to_keyword(chat_id, message, keyword):
    async for msg in client.iter_messages(chat_id):
        if keyword in msg.message:
            try:
                await client.send_message(chat_id, message, reply_to=msg.id)
                #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ '{message}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}'")
            except errors.RPCError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def spam(chat_id, message):
    entity = await client.get_entity(chat_id)
    while True:
        try:
            await client.send_message(entity, message)
            #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}: {message}")
        except errors.RPCError as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def send_reactions(chat_id, reaction, user_choice):
    async for message in client.iter_messages(chat_id):
        if not user_choice or message.sender_id == int(user_choice):
            try:
                await client(SendReactionRequest(peer=chat_id, msg_id=message.id, reaction=[types.ReactionEmoji(emoticon=reaction)]))
                #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                print(f"–†–µ–∞–∫—Ü–∏—è '{reaction}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id} –≤ —á–∞—Ç–µ {chat_id}")
            except errors.RPCError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

async def send_reactions_by_keyword(chat_id, reaction, keyword):
    async for message in client.iter_messages(chat_id):
        if message.message and keyword in message.message:
            try:
                await client(SendReactionRequest(peer=chat_id, msg_id=message.id, reaction=[types.ReactionEmoji(emoticon=reaction)]))
                #–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–±–æ–∏, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π (—Å–∏–º–≤–æ–ª #) –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                print(f"–†–µ–∞–∫—Ü–∏—è '{reaction}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id} —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}' –≤ —á–∞—Ç–µ {chat_id}")
            except errors.RPCError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

async def main():
    try:
        await client.start()
        print("—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
    except errors.RPCError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {e}")
        return

    async for dialog in client.iter_dialogs():
        print(dialog.name, '-', dialog.id)

    chat_id = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —á–∞—Ç–∞: ")

    try:
        await client.get_entity(chat_id)
    except ValueError:
        print(f"–ß–∞—Ç —Å ID –∏–ª–∏ –∏–º–µ–Ω–µ–º '{chat_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
    print("1 - –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("2 - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π")
    print("3 - –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º")
    print("—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
    mode = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ")

    tasks = []

    if mode == '1' or mode == '3':
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
        print("1 - –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–∞–π–º–µ—Ä–æ–º")
        print("2 - –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("3 - –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ")
        print("4 - –°–ø–∞–º –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
        m = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ")

        if m == '1':
            message = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
            try:
                interval = float(input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö): "))
            except ValueError:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.")
                return
            tasks.append(send_messages(chat_id, message, interval))

        elif m == '2':
            message = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
            try:
                count = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: "))
            except ValueError:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.")
                return
            tasks.append(send_multiple_messages(chat_id, message, count))
                
        elif m == '3':
            message = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
            keyword = input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: ")
            tasks.append(reply_to_keyword(chat_id, message, keyword))
        
        elif m == '4':
            message = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
            tasks.append(spam(chat_id, message))

    if mode == '2' or mode == '3':
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é:")
        print("1 - üëç")
        print("2 - ‚ù§Ô∏è")
        print("3 - ü§£")
        print("4 - üíã")
        print("5 - üî•")
        print("6 - üëè")
        print("7 - üí©")
        print("8 - üéâ")
        reaction_choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–∏: ")
        reactions = {'1': 'üëç', '2': '‚ù§Ô∏è', '3': 'ü§£', '4': 'üíã', '5': 'üî•', '6': 'üëè', '7': 'üí©', '8': 'üéâ'}
        reaction = reactions.get(reaction_choice, 'üëç')

        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
        print("1 - –ü–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("2 - –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
        print("—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
        rm = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ")

        if rm == '1':
            user_choice = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ")
            tasks.append(send_reactions(chat_id, reaction, user_choice))

        elif rm == '2':
            keyword = input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: ")
            tasks.append(send_reactions_by_keyword(chat_id, reaction, keyword))

    await asyncio.gather(*tasks)

#—Ä–µ–∫–ª–∞–º–∞ - https://t.me/+nwD-SFfQG3U1ODMy (–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
try:
    with client:
        client.loop.run_until_complete(main())
except KeyboardInterrupt:
    print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
